<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:property-placeholder location="classpath:config/jdbc.properties"/>

    <bean id="processxDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${app.jdbc.driverClassName}"/>
        <property name="url" value="${app.jdbc.url}"/>
        <property name="username" value="${app.jdbc.username}"/>
        <property name="password" value="${app.jdbc.password}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="processxDataSource"/>
        <property name="mapperLocations"
                  value="classpath*:config/sqlmap/processx/*.xml">
        </property>
        <!-- 配置分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor ">
                    <property name="properties">
                        <value>
                            <!--dialect=mysql-->
                            <!-- 该参数默认为false -->
                            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
                            rowBoundsWithCount=true
                            <!-- 该参数默认为false -->
                            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
                            <!-- 和startPage中的pageNum效果一样-->
                            offsetAsPageNum=true
                            <!-- 分页参数合理化，默认false禁用 -->
                            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
                            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.github.processx.dal.daointerface"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="processxTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="processxDataSource"/>
        </property>
    </bean>

    <bean id="processxTransactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="processxTransactionManager"/>
        </property>
    </bean>

    <!-- MyBatis批量操作 -->
<!--    <bean id="batchMapper" class="com.lingxi.processx.common.dal.batch.mapper.BatchMapperImpl">-->
<!--        <property name="sqlSessionFactory">-->
<!--            <ref bean="sqlSessionFactory"/>-->
<!--        </property>-->
<!--    </bean>-->

    <!-- DAL层日志拦截器 -->
<!--    <bean id="myBatisDalLogInterceptor"-->
<!--          class="com.lingxi.processx.common.dal.log.interceptor.MyBatisDalLogInterceptor"/>-->
<!--    <bean id="myBatisDalLogAutoProxyCreator"-->
<!--          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
<!--        <property name="interceptorNames">-->
<!--            <list>-->
<!--                <value>myBatisDalLogInterceptor</value>-->
<!--            </list>-->
<!--        </property>-->
<!--        <property name="beanNames">-->
<!--            <list>-->
<!--                <value>*Mapper</value>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->


</beans>